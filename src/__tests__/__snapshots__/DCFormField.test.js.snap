// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DCFormField Renders all the input components without error and only once 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCText",
        "description": "A description for this input",
        "displayName": "DCText",
        "name": "myTextInput",
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCText",
      "description": "A description for this input",
      "displayName": "DCText",
      "name": "myTextInput",
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCText",
        "description": "A description for this input",
        "displayName": "DCText",
        "name": "myTextInput",
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCBoolean",
        "description": "A description for this input",
        "displayName": "DCBoolean",
        "name": "myBooleanInput",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCBoolean",
      "description": "A description for this input",
      "displayName": "DCBoolean",
      "name": "myBooleanInput",
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCBoolean",
        "description": "A description for this input",
        "displayName": "DCBoolean",
        "name": "myBooleanInput",
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCNumber",
        "description": "A description for this input",
        "displayName": "DCNumber",
        "name": "myNumberInput",
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCNumber",
      "description": "A description for this input",
      "displayName": "DCNumber",
      "name": "myNumberInput",
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCNumber",
        "description": "A description for this input",
        "displayName": "DCNumber",
        "name": "myNumberInput",
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 4`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCRadio",
        "description": "A description for this input",
        "displayName": "DCRadio",
        "name": "myRadioInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCRadio",
      "description": "A description for this input",
      "displayName": "DCRadio",
      "name": "myRadioInput",
      "options": Array [
        Object {
          "text": "This option",
          "value": "thisOption",
        },
        Object {
          "text": "That option",
          "value": "thatOption",
        },
        Object {
          "text": "Something else",
          "value": "somethingElse",
        },
      ],
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCRadio",
        "description": "A description for this input",
        "displayName": "DCRadio",
        "name": "myRadioInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 5`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCDate",
        "description": "A description for this input",
        "displayName": "DCDate",
        "name": "myDateInput",
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCDate",
      "description": "A description for this input",
      "displayName": "DCDate",
      "name": "myDateInput",
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCDate",
        "description": "A description for this input",
        "displayName": "DCDate",
        "name": "myDateInput",
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 6`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCDate",
        "description": "A description for this input",
        "displayName": "DCDate (multiple)",
        "multiple": true,
        "name": "myDateMultipleInput",
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCDate",
      "description": "A description for this input",
      "displayName": "DCDate (multiple)",
      "multiple": true,
      "name": "myDateMultipleInput",
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCDate",
        "description": "A description for this input",
        "displayName": "DCDate (multiple)",
        "multiple": true,
        "name": "myDateMultipleInput",
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 7`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCDropdown",
        "description": "A description for this input",
        "displayName": "DCDropdown",
        "endpoints": Array [
          "https://metadata.ssbmod.net/data/Role",
          "https://metadata.ssbmod.net/data/Agent",
        ],
        "name": "myDropdownSingleSelectInput",
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCDropdown",
      "description": "A description for this input",
      "displayName": "DCDropdown",
      "endpoints": Array [
        "https://metadata.ssbmod.net/data/Role",
        "https://metadata.ssbmod.net/data/Agent",
      ],
      "name": "myDropdownSingleSelectInput",
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCDropdown",
        "description": "A description for this input",
        "displayName": "DCDropdown",
        "endpoints": Array [
          "https://metadata.ssbmod.net/data/Role",
          "https://metadata.ssbmod.net/data/Agent",
        ],
        "name": "myDropdownSingleSelectInput",
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 8`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCDropdown",
        "description": "A description for this input",
        "displayName": "DCDropdown (multiSelect)",
        "endpoints": Array [
          "https://metadata.ssbmod.net/data/Agent",
          "https://metadata.ssbmod.net/data/Role",
        ],
        "multiSelect": true,
        "name": "myDropdownMultipleSelectInput",
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCDropdown",
      "description": "A description for this input",
      "displayName": "DCDropdown (multiSelect)",
      "endpoints": Array [
        "https://metadata.ssbmod.net/data/Agent",
        "https://metadata.ssbmod.net/data/Role",
      ],
      "multiSelect": true,
      "name": "myDropdownMultipleSelectInput",
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCDropdown",
        "description": "A description for this input",
        "displayName": "DCDropdown (multiSelect)",
        "endpoints": Array [
          "https://metadata.ssbmod.net/data/Agent",
          "https://metadata.ssbmod.net/data/Role",
        ],
        "multiSelect": true,
        "name": "myDropdownMultipleSelectInput",
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 9`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCDropdown",
        "description": "A description for this input",
        "displayName": "DCDropdown (searchable)",
        "endpoints": Array [
          "https://metadata.ssbmod.net/data/Role",
          "https://metadata.ssbmod.net/data/Agent",
        ],
        "name": "myDropdownSingleSelectSearchableInput",
        "required": true,
        "searchable": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCDropdown",
      "description": "A description for this input",
      "displayName": "DCDropdown (searchable)",
      "endpoints": Array [
        "https://metadata.ssbmod.net/data/Role",
        "https://metadata.ssbmod.net/data/Agent",
      ],
      "name": "myDropdownSingleSelectSearchableInput",
      "required": true,
      "searchable": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCDropdown",
        "description": "A description for this input",
        "displayName": "DCDropdown (searchable)",
        "endpoints": Array [
          "https://metadata.ssbmod.net/data/Role",
          "https://metadata.ssbmod.net/data/Agent",
        ],
        "name": "myDropdownSingleSelectSearchableInput",
        "required": true,
        "searchable": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 10`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCDropdown",
        "description": "A description for this input",
        "displayName": "DCDropdown (searchable multiSelect)",
        "endpoints": Array [
          "https://metadata.ssbmod.net/data/Agent",
          "https://metadata.ssbmod.net/data/Role",
        ],
        "multiSelect": true,
        "name": "myDropdownMultipleSelectSearchableInput",
        "required": true,
        "searchable": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCDropdown",
      "description": "A description for this input",
      "displayName": "DCDropdown (searchable multiSelect)",
      "endpoints": Array [
        "https://metadata.ssbmod.net/data/Agent",
        "https://metadata.ssbmod.net/data/Role",
      ],
      "multiSelect": true,
      "name": "myDropdownMultipleSelectSearchableInput",
      "required": true,
      "searchable": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCDropdown",
        "description": "A description for this input",
        "displayName": "DCDropdown (searchable multiSelect)",
        "endpoints": Array [
          "https://metadata.ssbmod.net/data/Agent",
          "https://metadata.ssbmod.net/data/Role",
        ],
        "multiSelect": true,
        "name": "myDropdownMultipleSelectSearchableInput",
        "required": true,
        "searchable": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 11`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCDropdown",
        "description": "A description for this input",
        "displayName": "DCDropdown (provided options)",
        "name": "myDropdownSingleSelectProvidedOptionsInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCDropdown",
      "description": "A description for this input",
      "displayName": "DCDropdown (provided options)",
      "name": "myDropdownSingleSelectProvidedOptionsInput",
      "options": Array [
        Object {
          "text": "This option",
          "value": "thisOption",
        },
        Object {
          "text": "That option",
          "value": "thatOption",
        },
        Object {
          "text": "Something else",
          "value": "somethingElse",
        },
      ],
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCDropdown",
        "description": "A description for this input",
        "displayName": "DCDropdown (provided options)",
        "name": "myDropdownSingleSelectProvidedOptionsInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 12`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCDropdown",
        "description": "A description for this input",
        "displayName": "DCDropdown (multiSelect and provided options)",
        "multiSelect": true,
        "name": "myDropdownMultipleSelectProvidedOptionsInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCDropdown",
      "description": "A description for this input",
      "displayName": "DCDropdown (multiSelect and provided options)",
      "multiSelect": true,
      "name": "myDropdownMultipleSelectProvidedOptionsInput",
      "options": Array [
        Object {
          "text": "This option",
          "value": "thisOption",
        },
        Object {
          "text": "That option",
          "value": "thatOption",
        },
        Object {
          "text": "Something else",
          "value": "somethingElse",
        },
      ],
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCDropdown",
        "description": "A description for this input",
        "displayName": "DCDropdown (multiSelect and provided options)",
        "multiSelect": true,
        "name": "myDropdownMultipleSelectProvidedOptionsInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 13`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCDropdown",
        "description": "A description for this input",
        "displayName": "DCDropdown (empty options)",
        "name": "myDropdownEmptyOptionsInput",
        "options": Array [],
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCDropdown",
      "description": "A description for this input",
      "displayName": "DCDropdown (empty options)",
      "name": "myDropdownEmptyOptionsInput",
      "options": Array [],
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCDropdown",
        "description": "A description for this input",
        "displayName": "DCDropdown (empty options)",
        "name": "myDropdownEmptyOptionsInput",
        "options": Array [],
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 14`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCMultiInput",
        "description": "A description for this input",
        "displayName": "DCMultiInput",
        "endpoint": "https://metadata.ssbmod.net/data/Protocol",
        "multiValue": false,
        "name": "myDCMultiInputInput",
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCMultiInput",
      "description": "A description for this input",
      "displayName": "DCMultiInput",
      "endpoint": "https://metadata.ssbmod.net/data/Protocol",
      "multiValue": false,
      "name": "myDCMultiInputInput",
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCMultiInput",
        "description": "A description for this input",
        "displayName": "DCMultiInput",
        "endpoint": "https://metadata.ssbmod.net/data/Protocol",
        "multiValue": false,
        "name": "myDCMultiInputInput",
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 15`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCMultiInput",
        "description": "A description for this input",
        "displayName": "DCMultiInput (provided options)",
        "multiValue": false,
        "name": "myDCMultiInputProvidedOptionsInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCMultiInput",
      "description": "A description for this input",
      "displayName": "DCMultiInput (provided options)",
      "multiValue": false,
      "name": "myDCMultiInputProvidedOptionsInput",
      "options": Array [
        Object {
          "text": "This option",
          "value": "thisOption",
        },
        Object {
          "text": "That option",
          "value": "thatOption",
        },
        Object {
          "text": "Something else",
          "value": "somethingElse",
        },
      ],
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCMultiInput",
        "description": "A description for this input",
        "displayName": "DCMultiInput (provided options)",
        "multiValue": false,
        "name": "myDCMultiInputProvidedOptionsInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 16`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCMultiInput",
        "description": "A description for this input",
        "displayName": "DCMultiInput (empty options)",
        "multiValue": false,
        "name": "myDCMultiInputEmptyOptionsInput",
        "options": Array [],
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCMultiInput",
      "description": "A description for this input",
      "displayName": "DCMultiInput (empty options)",
      "multiValue": false,
      "name": "myDCMultiInputEmptyOptionsInput",
      "options": Array [],
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCMultiInput",
        "description": "A description for this input",
        "displayName": "DCMultiInput (empty options)",
        "multiValue": false,
        "name": "myDCMultiInputEmptyOptionsInput",
        "options": Array [],
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 17`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCMultiInput",
        "description": "A description for this input",
        "displayName": "DCMultiInput (multi value)",
        "endpoint": "https://metadata.ssbmod.net/data/Protocol",
        "multiValue": true,
        "name": "myMultiInputMultiValue",
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCMultiInput",
      "description": "A description for this input",
      "displayName": "DCMultiInput (multi value)",
      "endpoint": "https://metadata.ssbmod.net/data/Protocol",
      "multiValue": true,
      "name": "myMultiInputMultiValue",
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCMultiInput",
        "description": "A description for this input",
        "displayName": "DCMultiInput (multi value)",
        "endpoint": "https://metadata.ssbmod.net/data/Protocol",
        "multiValue": true,
        "name": "myMultiInputMultiValue",
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 18`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCMultiInput",
        "description": "A description for this input",
        "displayName": "DCMultiInput (multi value and provided options)",
        "multiValue": true,
        "name": "myDCMultiInputMultiValueProvidedOptions",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCMultiInput",
      "description": "A description for this input",
      "displayName": "DCMultiInput (multi value and provided options)",
      "multiValue": true,
      "name": "myDCMultiInputMultiValueProvidedOptions",
      "options": Array [
        Object {
          "text": "This option",
          "value": "thisOption",
        },
        Object {
          "text": "That option",
          "value": "thatOption",
        },
        Object {
          "text": "Something else",
          "value": "somethingElse",
        },
      ],
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCMultiInput",
        "description": "A description for this input",
        "displayName": "DCMultiInput (multi value and provided options)",
        "multiValue": true,
        "name": "myDCMultiInputMultiValueProvidedOptions",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 19`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCMultiInput",
        "description": "A description for this input",
        "displayName": "DCMultiInput (multi value and empty options)",
        "multiValue": true,
        "name": "myDCMultiInputMultiValueEmptyOptions",
        "options": Array [],
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCMultiInput",
      "description": "A description for this input",
      "displayName": "DCMultiInput (multi value and empty options)",
      "multiValue": true,
      "name": "myDCMultiInputMultiValueEmptyOptions",
      "options": Array [],
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCMultiInput",
        "description": "A description for this input",
        "displayName": "DCMultiInput (multi value and empty options)",
        "multiValue": true,
        "name": "myDCMultiInputMultiValueEmptyOptions",
        "options": Array [],
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 20`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCStatic",
        "description": "A description for this input",
        "displayName": "DCStatic (standard)",
        "name": "myDCStaticInput",
        "value": Array [
          "Value",
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCStatic",
      "description": "A description for this input",
      "displayName": "DCStatic (standard)",
      "name": "myDCStaticInput",
      "value": Array [
        "Value",
      ],
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCStatic",
        "description": "A description for this input",
        "displayName": "DCStatic (standard)",
        "name": "myDCStaticInput",
        "value": Array [
          "Value",
        ],
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 21`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCStatic",
        "description": "A description for this input",
        "displayName": "DCStatic (date)",
        "format": "date",
        "name": "myDCStaticDateInput",
        "value": Array [
          "1989-12-27T23:00:00.000Z",
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCStatic",
      "description": "A description for this input",
      "displayName": "DCStatic (date)",
      "format": "date",
      "name": "myDCStaticDateInput",
      "value": Array [
        "1989-12-27T23:00:00.000Z",
      ],
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCStatic",
        "description": "A description for this input",
        "displayName": "DCStatic (date)",
        "format": "date",
        "name": "myDCStaticDateInput",
        "value": Array [
          "1989-12-27T23:00:00.000Z",
        ],
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 22`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCStatic",
        "description": "A description for this input",
        "displayName": "DCStatic (tags)",
        "format": "tag",
        "name": "myDCStaticTagInput",
        "value": Array [
          "A tag",
          "Another tag",
          "A third?",
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCStatic",
      "description": "A description for this input",
      "displayName": "DCStatic (tags)",
      "format": "tag",
      "name": "myDCStaticTagInput",
      "value": Array [
        "A tag",
        "Another tag",
        "A third?",
      ],
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCStatic",
        "description": "A description for this input",
        "displayName": "DCStatic (tags)",
        "format": "tag",
        "name": "myDCStaticTagInput",
        "value": Array [
          "A tag",
          "Another tag",
          "A third?",
        ],
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 23`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCStatic",
        "description": "A description for this input",
        "displayName": "DCStatic (labels)",
        "format": "label",
        "name": "myDCStaticLabelInput",
        "value": Array [
          "A label",
          "Another label",
          "A third?",
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCStatic",
      "description": "A description for this input",
      "displayName": "DCStatic (labels)",
      "format": "label",
      "name": "myDCStaticLabelInput",
      "value": Array [
        "A label",
        "Another label",
        "A third?",
      ],
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCStatic",
        "description": "A description for this input",
        "displayName": "DCStatic (labels)",
        "format": "label",
        "name": "myDCStaticLabelInput",
        "value": Array [
          "A label",
          "Another label",
          "A third?",
        ],
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 24`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCStatic",
        "description": "A description for this input",
        "displayName": "DCStatic (multi standard)",
        "name": "myDCStaticMultiInput",
        "value": Array [
          "Value",
          "Another value",
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCStatic",
      "description": "A description for this input",
      "displayName": "DCStatic (multi standard)",
      "name": "myDCStaticMultiInput",
      "value": Array [
        "Value",
        "Another value",
      ],
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCStatic",
        "description": "A description for this input",
        "displayName": "DCStatic (multi standard)",
        "name": "myDCStaticMultiInput",
        "value": Array [
          "Value",
          "Another value",
        ],
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DCFormField Renders all the input components without error and only once 25`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DCFormField
    properties={
      Object {
        "component": "DCStatic",
        "description": "A description for this input",
        "displayName": "DCStatic (multi date)",
        "format": "date",
        "name": "myDCStaticDateMultiInput",
        "value": Array [
          "1989-12-27T23:00:00.000Z",
          "1990-12-27T23:00:00.000Z",
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "DCStatic",
      "description": "A description for this input",
      "displayName": "DCStatic (multi date)",
      "format": "date",
      "name": "myDCStaticDateMultiInput",
      "value": Array [
        "1989-12-27T23:00:00.000Z",
        "1990-12-27T23:00:00.000Z",
      ],
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "DCStatic",
        "description": "A description for this input",
        "displayName": "DCStatic (multi date)",
        "format": "date",
        "name": "myDCStaticDateMultiInput",
        "value": Array [
          "1989-12-27T23:00:00.000Z",
          "1990-12-27T23:00:00.000Z",
        ],
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
