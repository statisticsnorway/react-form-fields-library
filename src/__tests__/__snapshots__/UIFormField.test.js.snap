// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UIFormField Renders all the input components without error and only once 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIText",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIText",
        "name": "myTextInput",
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIText",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIText",
      "languageCode": undefined,
      "name": "myTextInput",
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIText",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIText",
        "languageCode": undefined,
        "name": "myTextInput",
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIText",
        "description": Array [
          "A description for this input",
          "Another one",
          "One more?",
        ],
        "displayName": "UITextMultiDescription",
        "name": "myTextInput",
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIText",
      "description": Array [
        "A description for this input",
        "Another one",
        "One more?",
      ],
      "displayName": "UITextMultiDescription",
      "languageCode": undefined,
      "name": "myTextInput",
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIText",
        "description": Array [
          "A description for this input",
          "Another one",
          "One more?",
        ],
        "displayName": "UITextMultiDescription",
        "languageCode": undefined,
        "name": "myTextInput",
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIText",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIText with a long name that cuts off in the placeholder so its shorther",
        "name": "myTextLongNameInput",
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIText",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIText with a long name that cuts off in the placeholder so its shorther",
      "languageCode": undefined,
      "name": "myTextLongNameInput",
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIText",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIText with a long name that cuts off in the placeholder so its shorther",
        "languageCode": undefined,
        "name": "myTextLongNameInput",
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 4`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIBoolean",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIBoolean",
        "name": "myBooleanInput",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIBoolean",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIBoolean",
      "languageCode": undefined,
      "name": "myBooleanInput",
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIBoolean",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIBoolean",
        "languageCode": undefined,
        "name": "myBooleanInput",
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 5`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UINumber",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UINumber",
        "name": "myNumberInput",
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UINumber",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UINumber",
      "languageCode": undefined,
      "name": "myNumberInput",
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UINumber",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UINumber",
        "languageCode": undefined,
        "name": "myNumberInput",
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 6`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIRadio",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIRadio",
        "name": "myRadioInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIRadio",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIRadio",
      "languageCode": undefined,
      "name": "myRadioInput",
      "options": Array [
        Object {
          "text": "This option",
          "value": "thisOption",
        },
        Object {
          "text": "That option",
          "value": "thatOption",
        },
        Object {
          "text": "Something else",
          "value": "somethingElse",
        },
      ],
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIRadio",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIRadio",
        "languageCode": undefined,
        "name": "myRadioInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 7`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIDate",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIDate",
        "name": "myDateInput",
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIDate",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIDate",
      "languageCode": undefined,
      "name": "myDateInput",
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIDate",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIDate",
        "languageCode": undefined,
        "name": "myDateInput",
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 8`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIDate",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIDate (multiple)",
        "multiple": true,
        "name": "myDateMultipleInput",
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIDate",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIDate (multiple)",
      "languageCode": undefined,
      "multiple": true,
      "name": "myDateMultipleInput",
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIDate",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIDate (multiple)",
        "languageCode": undefined,
        "multiple": true,
        "name": "myDateMultipleInput",
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 9`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIDropdown",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIDropdown (provided options)",
        "name": "myDropdownSingleSelectProvidedOptionsInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIDropdown",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIDropdown (provided options)",
      "languageCode": undefined,
      "name": "myDropdownSingleSelectProvidedOptionsInput",
      "options": Array [
        Object {
          "text": "This option",
          "value": "thisOption",
        },
        Object {
          "text": "That option",
          "value": "thatOption",
        },
        Object {
          "text": "Something else",
          "value": "somethingElse",
        },
      ],
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIDropdown",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIDropdown (provided options)",
        "languageCode": undefined,
        "name": "myDropdownSingleSelectProvidedOptionsInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 10`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIDropdown",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIDropdown (multiSelect and provided options)",
        "multiSelect": true,
        "name": "myDropdownMultipleSelectProvidedOptionsInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIDropdown",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIDropdown (multiSelect and provided options)",
      "languageCode": undefined,
      "multiSelect": true,
      "name": "myDropdownMultipleSelectProvidedOptionsInput",
      "options": Array [
        Object {
          "text": "This option",
          "value": "thisOption",
        },
        Object {
          "text": "That option",
          "value": "thatOption",
        },
        Object {
          "text": "Something else",
          "value": "somethingElse",
        },
      ],
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIDropdown",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIDropdown (multiSelect and provided options)",
        "languageCode": undefined,
        "multiSelect": true,
        "name": "myDropdownMultipleSelectProvidedOptionsInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 11`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIDropdown",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIDropdown (empty options)",
        "name": "myDropdownEmptyOptionsInput",
        "options": Array [],
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIDropdown",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIDropdown (empty options)",
      "languageCode": undefined,
      "name": "myDropdownEmptyOptionsInput",
      "options": Array [],
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIDropdown",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIDropdown (empty options)",
        "languageCode": undefined,
        "name": "myDropdownEmptyOptionsInput",
        "options": Array [],
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 12`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIMultiInput",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIMultiInput (provided options)",
        "multiValue": false,
        "name": "myUIMultiInputProvidedOptionsInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIMultiInput",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIMultiInput (provided options)",
      "languageCode": undefined,
      "multiValue": false,
      "name": "myUIMultiInputProvidedOptionsInput",
      "options": Array [
        Object {
          "text": "This option",
          "value": "thisOption",
        },
        Object {
          "text": "That option",
          "value": "thatOption",
        },
        Object {
          "text": "Something else",
          "value": "somethingElse",
        },
      ],
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIMultiInput",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIMultiInput (provided options)",
        "languageCode": undefined,
        "multiValue": false,
        "name": "myUIMultiInputProvidedOptionsInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 13`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIMultiInput",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIMultiInput (empty options)",
        "multiValue": false,
        "name": "myUIMultiInputEmptyOptionsInput",
        "options": Array [],
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIMultiInput",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIMultiInput (empty options)",
      "languageCode": undefined,
      "multiValue": false,
      "name": "myUIMultiInputEmptyOptionsInput",
      "options": Array [],
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIMultiInput",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIMultiInput (empty options)",
        "languageCode": undefined,
        "multiValue": false,
        "name": "myUIMultiInputEmptyOptionsInput",
        "options": Array [],
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 14`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIMultiInput",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIMultiInput (multi value and provided options)",
        "multiValue": true,
        "name": "myUIMultiInputMultiValueProvidedOptions",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIMultiInput",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIMultiInput (multi value and provided options)",
      "languageCode": undefined,
      "multiValue": true,
      "name": "myUIMultiInputMultiValueProvidedOptions",
      "options": Array [
        Object {
          "text": "This option",
          "value": "thisOption",
        },
        Object {
          "text": "That option",
          "value": "thatOption",
        },
        Object {
          "text": "Something else",
          "value": "somethingElse",
        },
      ],
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIMultiInput",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIMultiInput (multi value and provided options)",
        "languageCode": undefined,
        "multiValue": true,
        "name": "myUIMultiInputMultiValueProvidedOptions",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 15`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIMultiInput",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIMultiInput (multi value and empty options)",
        "multiValue": true,
        "name": "myUIMultiInputMultiValueEmptyOptions",
        "options": Array [],
        "required": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIMultiInput",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIMultiInput (multi value and empty options)",
      "languageCode": undefined,
      "multiValue": true,
      "name": "myUIMultiInputMultiValueEmptyOptions",
      "options": Array [],
      "required": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIMultiInput",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIMultiInput (multi value and empty options)",
        "languageCode": undefined,
        "multiValue": true,
        "name": "myUIMultiInputMultiValueEmptyOptions",
        "options": Array [],
        "required": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 16`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIDropdown",
        "description": Array [
          "A description",
        ],
        "displayName": "UIDropdown (show links)",
        "name": "myShowLinksInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "showLinks": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIDropdown",
      "description": Array [
        "A description",
      ],
      "displayName": "UIDropdown (show links)",
      "languageCode": undefined,
      "name": "myShowLinksInput",
      "options": Array [
        Object {
          "text": "This option",
          "value": "thisOption",
        },
        Object {
          "text": "That option",
          "value": "thatOption",
        },
        Object {
          "text": "Something else",
          "value": "somethingElse",
        },
      ],
      "required": true,
      "showLinks": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIDropdown",
        "description": Array [
          "A description",
        ],
        "displayName": "UIDropdown (show links)",
        "languageCode": undefined,
        "name": "myShowLinksInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "showLinks": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 17`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIDropdown",
        "description": Array [
          "A description",
        ],
        "displayName": "UIDropdown (multiple and show links)",
        "multiSelect": true,
        "name": "myShowLinksMultipleInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "showLinks": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIDropdown",
      "description": Array [
        "A description",
      ],
      "displayName": "UIDropdown (multiple and show links)",
      "languageCode": undefined,
      "multiSelect": true,
      "name": "myShowLinksMultipleInput",
      "options": Array [
        Object {
          "text": "This option",
          "value": "thisOption",
        },
        Object {
          "text": "That option",
          "value": "thatOption",
        },
        Object {
          "text": "Something else",
          "value": "somethingElse",
        },
      ],
      "required": true,
      "showLinks": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIDropdown",
        "description": Array [
          "A description",
        ],
        "displayName": "UIDropdown (multiple and show links)",
        "languageCode": undefined,
        "multiSelect": true,
        "name": "myShowLinksMultipleInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "showLinks": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 18`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIMultiInput",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIMultiInput (show links)",
        "multiValue": false,
        "name": "myUIMultiInpuShowLinksInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "showLinks": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIMultiInput",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIMultiInput (show links)",
      "languageCode": undefined,
      "multiValue": false,
      "name": "myUIMultiInpuShowLinksInput",
      "options": Array [
        Object {
          "text": "This option",
          "value": "thisOption",
        },
        Object {
          "text": "That option",
          "value": "thatOption",
        },
        Object {
          "text": "Something else",
          "value": "somethingElse",
        },
      ],
      "required": true,
      "showLinks": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIMultiInput",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIMultiInput (show links)",
        "languageCode": undefined,
        "multiValue": false,
        "name": "myUIMultiInpuShowLinksInput",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "showLinks": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 19`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIMultiInput",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIMultiInput (multi value and show links)",
        "multiValue": true,
        "name": "myUIMultiInputMultiValueShowLinks",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "showLinks": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIMultiInput",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIMultiInput (multi value and show links)",
      "languageCode": undefined,
      "multiValue": true,
      "name": "myUIMultiInputMultiValueShowLinks",
      "options": Array [
        Object {
          "text": "This option",
          "value": "thisOption",
        },
        Object {
          "text": "That option",
          "value": "thatOption",
        },
        Object {
          "text": "Something else",
          "value": "somethingElse",
        },
      ],
      "required": true,
      "showLinks": true,
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIMultiInput",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIMultiInput (multi value and show links)",
        "languageCode": undefined,
        "multiValue": true,
        "name": "myUIMultiInputMultiValueShowLinks",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "showLinks": true,
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 20`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIMultiInput",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIMultiInput (multi value with values)",
        "multiValue": true,
        "name": "myUIMultiInputMultiValueWithValues",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "value": Array [
          Object {
            "option": "thisOption",
            "text": Array [
              "Text",
              "Text #2",
            ],
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIMultiInput",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIMultiInput (multi value with values)",
      "languageCode": undefined,
      "multiValue": true,
      "name": "myUIMultiInputMultiValueWithValues",
      "options": Array [
        Object {
          "text": "This option",
          "value": "thisOption",
        },
        Object {
          "text": "That option",
          "value": "thatOption",
        },
        Object {
          "text": "Something else",
          "value": "somethingElse",
        },
      ],
      "required": true,
      "value": Array [
        Object {
          "option": "thisOption",
          "text": Array [
            "Text",
            "Text #2",
          ],
        },
      ],
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIMultiInput",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIMultiInput (multi value with values)",
        "languageCode": undefined,
        "multiValue": true,
        "name": "myUIMultiInputMultiValueWithValues",
        "options": Array [
          Object {
            "text": "This option",
            "value": "thisOption",
          },
          Object {
            "text": "That option",
            "value": "thatOption",
          },
          Object {
            "text": "Something else",
            "value": "somethingElse",
          },
        ],
        "required": true,
        "value": Array [
          Object {
            "option": "thisOption",
            "text": Array [
              "Text",
              "Text #2",
            ],
          },
        ],
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 21`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIStatic",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIStatic (standard)",
        "name": "myUIStaticInput",
        "value": Array [
          "Value",
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIStatic",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIStatic (standard)",
      "languageCode": undefined,
      "name": "myUIStaticInput",
      "value": Array [
        "Value",
      ],
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIStatic",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIStatic (standard)",
        "languageCode": undefined,
        "name": "myUIStaticInput",
        "value": Array [
          "Value",
        ],
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 22`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIStatic",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIStatic (date)",
        "format": "date",
        "name": "myUIStaticDateInput",
        "value": Array [
          "1989-12-27T23:00:00.000Z",
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIStatic",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIStatic (date)",
      "format": "date",
      "languageCode": undefined,
      "name": "myUIStaticDateInput",
      "value": Array [
        "1989-12-27T23:00:00.000Z",
      ],
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIStatic",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIStatic (date)",
        "format": "date",
        "languageCode": undefined,
        "name": "myUIStaticDateInput",
        "value": Array [
          "1989-12-27T23:00:00.000Z",
        ],
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 23`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIStatic",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIStatic (tags)",
        "format": "tag",
        "name": "myUIStaticTagInput",
        "value": Array [
          "A tag",
          "Another tag",
          "A third?",
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIStatic",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIStatic (tags)",
      "format": "tag",
      "languageCode": undefined,
      "name": "myUIStaticTagInput",
      "value": Array [
        "A tag",
        "Another tag",
        "A third?",
      ],
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIStatic",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIStatic (tags)",
        "format": "tag",
        "languageCode": undefined,
        "name": "myUIStaticTagInput",
        "value": Array [
          "A tag",
          "Another tag",
          "A third?",
        ],
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 24`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIStatic",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIStatic (labels)",
        "format": "label",
        "name": "myUIStaticLabelInput",
        "value": Array [
          "A label",
          "Another label",
          "A third?",
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIStatic",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIStatic (labels)",
      "format": "label",
      "languageCode": undefined,
      "name": "myUIStaticLabelInput",
      "value": Array [
        "A label",
        "Another label",
        "A third?",
      ],
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIStatic",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIStatic (labels)",
        "format": "label",
        "languageCode": undefined,
        "name": "myUIStaticLabelInput",
        "value": Array [
          "A label",
          "Another label",
          "A third?",
        ],
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 25`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIStatic",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIStatic (multi standard)",
        "name": "myUIStaticMultiInput",
        "value": Array [
          "Value",
          "Another value",
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIStatic",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIStatic (multi standard)",
      "languageCode": undefined,
      "name": "myUIStaticMultiInput",
      "value": Array [
        "Value",
        "Another value",
      ],
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIStatic",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIStatic (multi standard)",
        "languageCode": undefined,
        "name": "myUIStaticMultiInput",
        "value": Array [
          "Value",
          "Another value",
        ],
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 26`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIStatic",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIStatic (multi date)",
        "format": "date",
        "name": "myUIStaticDateMultiInput",
        "value": Array [
          "1989-12-27T23:00:00.000Z",
          "1990-12-27T23:00:00.000Z",
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIStatic",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIStatic (multi date)",
      "format": "date",
      "languageCode": undefined,
      "name": "myUIStaticDateMultiInput",
      "value": Array [
        "1989-12-27T23:00:00.000Z",
        "1990-12-27T23:00:00.000Z",
      ],
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIStatic",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIStatic (multi date)",
        "format": "date",
        "languageCode": undefined,
        "name": "myUIStaticDateMultiInput",
        "value": Array [
          "1989-12-27T23:00:00.000Z",
          "1990-12-27T23:00:00.000Z",
        ],
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UIFormField Renders all the input components without error and only once 27`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UIFormField
    properties={
      Object {
        "component": "UIStatic",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIStatic (with icon)",
        "icon": "user",
        "name": "myUIStaticIconInput",
        "value": Array [
          "Value",
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": "UIStatic",
      "description": Array [
        "A description for this input",
      ],
      "displayName": "UIStatic (with icon)",
      "icon": "user",
      "languageCode": undefined,
      "name": "myUIStaticIconInput",
      "value": Array [
        "Value",
      ],
      "valueChange": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": "UIStatic",
        "description": Array [
          "A description for this input",
        ],
        "displayName": "UIStatic (with icon)",
        "icon": "user",
        "languageCode": undefined,
        "name": "myUIStaticIconInput",
        "value": Array [
          "Value",
        ],
        "valueChange": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
